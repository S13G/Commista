version: 2.1
orbs:
  python: circleci/python@2.0.3

jobs:
  build_and_test:
    executor:
      python/default
    docker:
      - image: cimg/python:3.10.2

    steps:
      - checkout
      - run:
          name: "Upgrade pip"
          command: "pip3 install --upgrade pip"
      - run:
          name: "Install dependencies"
          command: "pip3 install -r requirements.txt"
      - run:
          name: "Run tests"
          command: "pytest"

  build_and_test_docker:
    parallelism: 4
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run:
          name: Configuring environment variables
          command: |
            echo "SECRET_KEY=${SECRET_KEY}" >> .env
            echo "DATABASE_URL=${DATABASE_URL}" >> .env
            echo "CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}" >> .env
            echo "CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}" >> .env
            echo "CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}" >> .env
            echo "GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}" >> .env
            echo "EMAIL_HOST_USER=${EMAIL_HOST_USER}" >> .env
            echo "EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}" >> .env
            echo "FLUTTERWAVE_SECRET_KEY=${FLUTTERWAVE_SECRET_KEY}" >> .env
            echo "FLUTTERWAVE_PUBLIC_KEY=${FLUTTERWAVE_PUBLIC_KEY}" >> .env
            echo "FW_VERIFY_LINK=${FW_VERIFY_LINK}" >> .env
            echo "ORDER_SHIPPING_MONTHS=${ORDER_SHIPPING_MONTHS}" >> .env
            echo "DEFAULT_PRODUCT_SHIPPING_DAYS=${DEFAULT_PRODUCT_SHIPPING_DAYS}" >> .env
            echo "DEFAULT_PRODUCT_SHIPPING_FEE=${DEFAULT_PRODUCT_SHIPPING_FEE}" >> .env
            echo "DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}" >> .env
      - run:
          name: Build and start Docker compose services
          command: |
            docker-compose build
            docker-compose up -d
      - run:
          name: Stop and remove docker compose services
          command: |
            docker-compose down
workflows:
  run-build-test:
    jobs:
      - build_and_test
      - build_and_test_docker
